{"version":3,"sources":["api/users.ts","services/user.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoForm","onSubmit","useState","title","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","e","preventDefault","trim","completed","className","htmlFor","type","placeholder","value","onChange","target","disabled","map","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","initialTodos","getNewTodoId","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cec53f4c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number):User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/user';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  onSubmit: (todo: Todo) => void;\n}\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"form-title\">Title:</label>\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          id=\"form-title\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"form-user\">Choose a user</label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"form-user\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option\n            value=\"0\"\n            disabled\n          >\n            Choose a user\n          </option>\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    {todo.user\n      && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { getUserById } from './services/user';\n\nimport './App.scss';\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nconst getNewTodoId = (todos: Todo[]) => Math.max(...todos\n  .map(todo => todo.id)) + 1;\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}